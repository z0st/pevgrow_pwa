import Vue, { ComponentOptions } from 'vue';
import { DocumentNode } from 'graphql';
interface GraphQLComponentOptions extends ComponentOptions<Vue> {
    query?: DocumentNode | {
        [key: string]: DocumentNode;
    };
    mutation?: DocumentNode | {
        [key: string]: DocumentNode;
    };
    subscription?: DocumentNode | {
        [key: string]: DocumentNode;
    };
}
declare type Handler = (component: {
    options: GraphQLComponentOptions;
}, 
/** An array of Graphql DocumentNodes, each with a single DefinitionNode */
gqlDocuments: DocumentNode[], attributes?: object) => void;
export declare const aggregateOperations: (operations: DocumentNode[]) => {
    [x: string]: DocumentNode;
};
export declare const getOperations: (type: import("graphql").OperationTypeNode, operations?: DocumentNode[]) => DocumentNode | {
    [x: string]: DocumentNode;
} | undefined;
declare const defaultHandler: Handler;
export default defaultHandler;
